ackage javaapplication82;

import java.util.Random;
import static jdk.nashorn.tools.ShellFunctions.input;

public class Lottozahlen2 {
   static int[] numbers = new int[100];
    static int[] duplicates = new int[50];

    public static void main(String[] args) {
        initArray();
        outputArray();
        System.out.println("maximum: "+maxNumber());
        System.out.println("minimum: "+minNumber());
        System.out.println("median: "+midNumber());
        System.out.println("----------------------");
        searchDuplicate();
        System.out.println("Auswertung");
        printArray();
        System.out.println("first recurring number:"+indexFirstDouble(numbers));
        System.out.println("duplicate");
    }

    public static int[] initArray() {
        Random rand = new Random();
        for (int i = 0; i < numbers.length; i++) {
            numbers[i] = rand.nextInt(50) + 1;
        }
        return numbers;
    }

    public static void outputArray() {
        for (int i = 0; i < numbers.length; i++) {
            System.out.println("The number at position " + (i + 1) + " is [" + numbers[i]+"]");
        }
    }

    public static int maxNumber() {
        int max = 0;
        for (int number:numbers) {
            if (number > max) {
                max = number;
            }// metodo avanza desde posicion 0  hasta final 
        }
        return max;
    }

    public static int minNumber() {
        int min = 50;
        for (int number:numbers) {//numero 
            if (number < min) {
                min = number; // 
            }
        }
        return min;
    }

    public static int midNumber() {
        int mid = 0;
        for (int number:numbers) {
            mid += number;
        }
        return (mid / numbers.length);// dividir la suma de array entre largo
    }

    public static void searchDuplicate() {
      
            for(int i = 0; i < numbers.length; i++) {  
            for(int j = i + 1; j < numbers.length; j++) { //comparar posición 1 con pos 2 así todas
                if(numbers[i] == numbers[j])  
                    System.out.println(numbers[j]);  
        
    }
    }
    }

    public static void printArray() {
        int sum = 0;
        for (int number:numbers) {
            if (number > 1 && number < 50) {
                sum += 1;
            }
        }
        System.out.println(sum);
    }
    

    public static String indexFirstDouble(int [] array) {
        int firstNumber = 100;
        int firstIndex = 100;
        int counter = 0;
        for (int i = 1; i < 50; i++) {
            if (duplicates[i] > 1) {
                counter = 0;
                for (int index = 0; index < array.length; index++) {
                    if (numbers[index] == i) {
                        counter += 1;
                        if (counter == 2 && index < firstIndex) {
                            firstNumber = numbers[index];
                            firstIndex = index + 1;
                            break;
                        }
                    }
                }
            }
        }
        return firstNumber + " Index: " + firstIndex;
        
    }
}
